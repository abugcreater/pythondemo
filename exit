[33mcommit 45ecdbb057ce892e77aa085140065b8de278a042[m
Author: fengkai <kai.feng@qianli-inc.com>
Date:   Wed Jul 17 14:06:13 2019 +0800

    no message

[1mdiff --git a/aa.py b/aa.py[m
[1mnew file mode 100644[m
[1mindex 0000000..911ba56[m
[1m--- /dev/null[m
[1m+++ b/aa.py[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m# coding:utf-8[m
[32m+[m[32mimport keyword[m
[32m+[m[32mimport sys[m
[32m+[m[32mimport math[m
[32m+[m
[32m+[m[32mkeyword.kwlist[m
[32m+[m[32m# 关键字[m
[32m+[m[32m['and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'exec', 'finally', 'for',[m
[32m+[m[32m 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'not', 'or', 'pass', 'print', 'raise', 'return', 'try',[m
[32m+[m[32m 'while', 'with', 'yield'][m
[32m+[m[32m# 单行注释[m
[32m+[m[32m'''[m
[32m+[m[32m多行注释[m
[32m+[m[32m'''[m
[32m+[m[32m"""[m
[32m+[m[32m多行注释[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mname = 'dddd'  # 弱类型[m
[32m+[m[32mprint(keyword.iskeyword('and'), name, 12434, '5342523' + '314')[m
[32m+[m[32mprint('hello, world!' * 2)[m
[32m+[m[32m_a = 'I\'m DeanWu!'[m
[32m+[m[32ma_cha = '你好'[m
[32m+[m[32mprint(type(name), _a, sys.getdefaultencoding(), len(a_cha), a_cha[1], name[0:2], 'd' in name)[m
[32m+[m[32m_b = 'suck my dick'[m
[32m+[m[32ms = '%s,%s!' % (_a, _b)[m
[32m+[m[32md = '{1}，{0}'.format('世界', '你好')[m
[32m+[m[32mprint(s, d, dir(_a), not True)[m
[32m+[m[32m# radius = float(input('请输入：'))[m
[32m+[m[32m# perimeter = 2 * math.pi * radius[m
[32m+[m[32m# print('圆的周长为:%.2f' %perimeter  )[m
[32m+[m[32myear = int(input('请输入年份: '))[m
[32m+[m[32mis_leap = ((year % 4 == 0 and year % 100 != 0) or[m
[32m+[m[32m           year % 400 == 0)[m
[32m+[m[32mprint(is_leap)[m
\ No newline at end of file[m
[1mdiff --git a/com/__init__.py b/com/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/com/__init__data_type.py b/com/__init__data_type.py[m
[1mnew file mode 100644[m
[1mindex 0000000..d65208b[m
[1m--- /dev/null[m
[1m+++ b/com/__init__data_type.py[m
[36m@@ -0,0 +1,58 @@[m
[32m+[m[32mimport sys[m
[32m+[m[32mimport time[m
[32m+[m
[32m+[m
[32m+[m[32msys.getdefaultencoding()[m
[32m+[m[32m_t_ = time.clock()[m
[32m+[m[32mprint(_t_)[m
[32m+[m
[32m+[m[32m#list数据格式,列表元素有序,不需要都是同一种元素[m
[32m+[m[32ma = [1,2,3][m
[32m+[m[32mb = ['1',2,None][m
[32m+[m[32mc = [1,2,[3,4]][m
[32m+[m[32md = [][m
[32m+[m[32m#用于切片list[start_index:end_index:step_length][m
[32m+[m[32m#start_index开始下标省略时，默认为 0 ；end_index结束下标省略时，默认为最大下标，及长度-1或-1；step_length步长省略时，默认为1。[m
[32m+[m[32me = [1,2,3,4,5,6,7,8,9,0][m
[32m+[m[32mprint(a, b, c, d)[m
[32m+[m
[32m+[m[32me = e[6:10:1][m
[32m+[m
[32m+[m[32ma[2] = 'sdfdf';[m
[32m+[m[32mprint(a,e,len(a))[m
[32m+[m[32m#列表联合符号为+, reversed，切片反转列表[m
[32m+[m[32mprint(a + c, list(reversed(a)), a[::-1])[m
[32m+[m[32mprint(dir(list))[m
[32m+[m
[32m+[m[32m#元组tuple，元素不可修改[m
[32m+[m[32m_a = (1,2,3,3,4)[m
[32m+[m[32mprint(type(_a),_a*2)[m
[32m+[m
[32m+[m[32m#字典dict，键值对,多个直接覆盖；集合其中元素不可重复[m
[32m+[m[32m_map_a = {'name':'fuck',"age":12,'name': 'shit'}[m
[32m+[m[32m_map_a['address'] = 'los angeles'[m
[32m+[m[32mdel _map_a['age'][m
[32m+[m[32mprint(_map_a.get('name',''), dict(name='Tim', age=18), {(1,2):'Time'},_map_a['name'], _map_a)[m
[32m+[m
[32m+[m[32m_set_s = {'1','2','4','3'}[m
[32m+[m[32mprint(_set_s, type(_set_s))[m
[32m+[m
[32m+[m[32m''''[m
[32m+[m[32m序列[m
[32m+[m[32m序列(sequence)，在Python中是一种具有相同特性的高级数据结构的统称，可以使用下标来获取元素和切分。[m
[32m+[m[32m到现在，我们学习了列表、元组、字典和集合4种高级数据结构。可以发现，列表和元组在操作上有许多相同的地方。[m
[32m+[m[32m除了列表和元组，还有字符串也是序列。可见列表、元组、字符串为序列，字典、集合、数值为非序列。[m
[32m+[m[32m'''''[m
[32m+[m
[32m+[m
[32m+[m[32m'''[m
[32m+[m[32m可变类型（mutable）：列表，字典，集合；[m
[32m+[m[32m不可变类型（unmutable）：数字，字符串，元组；[m
[32m+[m[32m'''[m
[32m+[m[32mn4 = n3 = n2 = n1 = "123/'Wu'"[m
[32m+[m
[32m+[m[32m_n1 = {"k1": "wu", "k2": 123, "k3": ["alex", 456]}[m
[32m+[m[32m_n2 = _n1[m
[32m+[m
[32m+[m
[32m+[m
[1mdiff --git a/com/fk/__init__.py b/com/fk/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/com/fk/__init__controller.py b/com/fk/__init__controller.py[m
[1mnew file mode 100644[m
[1mindex 0000000..f5a73ba[m
[1m--- /dev/null[m
[1m+++ b/com/fk/__init__controller.py[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32m# Python中的if else等条件控制语句[m
[32m+[m
[32m+[m[32mimport sys[m
[32m+[m[32mimport time[m
[32m+[m
[32m+[m[32m_a = time.clock()[m
[32m+[m
[32m+[m[32m# 当if单独使用时时相当于Java中的switch case；如果后边跟了布尔值在表示条件判断[m
[32m+[m[32mif _a > 0:[m
[32m+[m[32m    print("_a > 0", _a)[m
[32m+[m[32melif _a == 0:[m
[32m+[m[32m    print("_a is so weak", _a)[m
[32m+[m[32melse:[m
[32m+[m[32m    print("the break")[m
[32m+[m
[32m+[m[32mif '1':[m
[32m+[m[32m    print("aaa")[m
[32m+[m[32mif '2':[m
[32m+[m[32m    print('bbbb')[m
[32m+[m[32melse:[m
[32m+[m[32m    print('what`s you problem')[m
[32m+[m
[32m+[m[32m#三元操作符[m
[32m+[m[32mnow_time = time.clock()[m
[32m+[m[32ma = '上午好' if now_time < 12 else '下午好'[m
[32m+[m[32mprint(a, now_time)[m
[32m+[m
[32m+[m
[32m+[m[32m# 关于for操作[m
[32m+[m[32ml = [1,2,3,4,5][m
[32m+[m[32msum = 0[m
[32m+[m[32mfor i in l :[m
[32m+[m[32m    sum += i[m
[32m+[m[32m    sum +=1[m
[32m+[m[32mprint(sum)[m
[32m+[m
[32m+[m[32ml = [(1,2),(1,3),(1,4)][m
[32m+[m[32mfor i, j in l:[m
[32m+[m[32m    i == j[m
[32m+[m[32m    # print(i)[m
[32m+[m[32m    # print(j)[m
[32m+[m
[32m+[m[32msum = 0[m
[32m+[m[32mfor i in range(1,6):[m
[32m+[m[32m    sum += i[m
[32m+[m[32mprint(sum)[m
[32m+[m
[32m+[m
[32m+[m[32m#break的运用[m
[32m+[m[32m# while 中使用[m
[32m+[m[32msum = 0[m
[32m+[m[32mwhile True:[m
[32m+[m[32m    if sum > 10:[m
[32m+[m[32m        print('sum已大于10')[m
[32m+[m[32m        break[m
[32m+[m[32m    sum += 1[m
[32m+[m[32m    # print(sum)[m
[32m+[m
[32m+[m[32m# for 中使用[m
[32m+[m[32msum = 0[m
[32m+[m[32mfor i in range(100):[m
[32m+[m[32m    if sum > 10:[m
[32m+[m[32m        print('sum已大于10')[m
[32m+[m[32m        break;[m
[32m+[m[32m    sum += 1[m
[32m+[m[32m    # print(sum)[m
[32m+[m
[32m+[m[32mfor i in range(5):[m
[32m+[m[32m    print(i)[m
[32m+[m[32m    pass # 占位[m
[1mdiff --git a/com/fk/python/__init__.py b/com/fk/python/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/com/fk/python/__init__method.py b/com/fk/python/__init__method.py[m
[1mnew file mode 100644[m
[1mindex 0000000..6b844e1[m
[1m--- /dev/null[m
[1m+++ b/com/fk/python/__init__method.py[m
[36m@@ -0,0 +1,89 @@[m
[32m+[m[32mimport sys[m
[32m+[m[32mfrom math import cos[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m# 无参无返回函数[m
[32m+[m[32mdef hello():[m
[32m+[m[32m    print("hello world!")[m
[32m+[m[32m    print("and good morning good afternoon good night")[m
[32m+[m
[32m+[m
[32m+[m[32mpass[m
[32m+[m
[32m+[m
[32m+[m[32mdef hello_name(name):[m
[32m+[m[32m    print("hello%s" % (name))[m
[32m+[m
[32m+[m[32m    pass[m
[32m+[m
[32m+[m
[32m+[m[32mdef hello_no_param():[m
[32m+[m[32m    return 1[m
[32m+[m
[32m+[m
[32m+[m[32mdef hello_param(num):[m
[32m+[m[32m    sum = 0[m
[32m+[m[32m    for i in range(1, num + 1):[m
[32m+[m[32m        sum += i[m
[32m+[m[32m        i += 1[m
[32m+[m
[32m+[m[32m    return sum[m
[32m+[m
[32m+[m[32m#可变函数[m
[32m+[m[32mdef hello2(*arg):[m
[32m+[m[32m    print(arg)[m
[32m+[m[32m    for name in arg:[m
[32m+[m[32m        print("hello, %s" % (name))[m
[32m+[m
[32m+[m
[32m+[m[32mpass[m
[32m+[m
[32m+[m[32m#关键字函数[m
[32m+[m[32mdef hello3(**kwargs):[m
[32m+[m[32m    print('hello, %s' % kwargs['name'])[m
[32m+[m[32m    print('you age: %s' % kwargs['age'])[m
[32m+[m
[32m+[m[32m    pass[m
[32m+[m
[32m+[m[32m#默认函数[m
[32m+[m[32mdef hello4(name = 'deam', age = 30):[m
[32m+[m[32m    print("name:%s" %name)[m
[32m+[m[32m    print("age:%s" %age)[m
[32m+[m
[32m+[m[32mpass[m
[32m+[m
[32m+[m
[32m+[m[32mmoney = 2000[m
[32m+[m
[32m+[m[32mdef changeMoney():[m
[32m+[m[32m    #想对全局变量赋值必须加上global关键字[m
[32m+[m[32m   global money[m
[32m+[m[32m   money = 3000 + money[m
[32m+[m
[32m+[m[32mprint(money)[m
[32m+[m[32mchangeMoney()[m
[32m+[m[32mprint(money)[m
[32m+[m
[32m+[m[32mprint(hello_no_param())[m
[32m+[m
[32m+[m[32mprint(hello_param(10))[m
[32m+[m
[32m+[m[32mhello2('adadsf', 'acfun', 'bilibili')[m
[32m+[m
[32m+[m[32mhello3(name='fuck',age=12)[m
[32m+[m
[32m+[m[32mhello4('dfd',89)[m
[32m+[m
[32m+[m
[32m+[m[32m# 内名函数[m
[32m+[m[32msum = lambda arg1, arg2: arg1 + arg2[m
[32m+[m
[32m+[m[32m# 调用sum函数[m
[32m+[m[32mprint ("相加后的值为 : ", sum( 10, 20 ))[m
[32m+[m[32mprint ("相加后的值为 : ", sum( 20, 20 ))[m
[32m+[m
[32m+[m
[32m+[m[32mprint(cos(0.5))[m
[32m+[m
[32m+[m
[1mdiff --git a/com/fk/python/python_io.py b/com/fk/python/python_io.py[m
[1mnew file mode 100644[m
[1mindex 0000000..0a8fc06[m
[1m--- /dev/null[m
[1m+++ b/com/fk/python/python_io.py[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m
[32m+[m[32mimport numbers[m
[32m+[m
[32m+[m[32mstr = int(input("请输入一个数字"),10)[m
[32m+[m[32mprint("您输入的数字大于10: %s" %(str > 10))[m
[32m+[m
[32m+[m[32m# open 函数[m
[32m+[m[32m# 你必须先用Python内置的open()函数打开一个文件，创建一个file对象，相关的方法才可以调用它进行读写。[m
[32m+[m
[32m+[m
[32m+[m[32m# 语法：[m
[32m+[m[32m#[m
[32m+[m[32m# file object = open(file_name [, access_mode][, buffering])[m
[32m+[m[32m# 各个参数的细节如下：[m
[32m+[m[32m#[m
[32m+[m[32m# file_name：file_name变量是一个包含了你要访问的文件名称的字符串值。[m
[32m+[m[32m# access_mode：access_mode决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。[m
[32m+[m[32m# buffering:如果buffering的值被设为0，就不会有寄存。如果buffering的值取1，访问文件时会寄存行。如果将buffering的值设为大于1的整数，表明了这就是的寄存区的缓冲大小。如果取负值，寄存区的缓冲大小则为系统默认。[m
\ No newline at end of file[m
[1mdiff --git a/com/fk/python/ward2txt.py b/com/fk/python/ward2txt.py[m
[1mnew file mode 100644[m
[1mindex 0000000..a128a18[m
[1m--- /dev/null[m
[1m+++ b/com/fk/python/ward2txt.py[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32m# #coding=utf-8[m
[32m+[m[32m#[m
[32m+[m[32m# """[m
[32m+[m[32m# Description: Word文件转化TXT文本[m
[32m+[m[32m# Author：伏草惟存[m
[32m+[m[32m# Prompt: code in Python3 env[m
[32m+[m[32m# Install package： pip install pypiwin32[m
[32m+[m[32m# """[m
[32m+[m[32m#[m
[32m+[m[32m# import os,fnmatch[m
[32m+[m[32m# from win32com import client as wc[m
[32m+[m[32m# from win32com.client import Dispatch[m
[32m+[m[32m#[m
[32m+[m[32m#[m
[32m+[m[32m# '''[m
[32m+[m[32m# 功能描述：word文件转存txt文件，默认存储当前路径下；用户可以指定存储文件路径。[m
[32m+[m[32m# 参数描述：1 filePath：文件路径   2 savePath： 指定保存路径[m
[32m+[m[32m# '''[m
[32m+[m[32m# def Word2Txt(filePath,savePath=''):[m
[32m+[m[32m#     # 1 切分文件上级目录和文件名[m
[32m+[m[32m#     dirs,filename = os.path.split(filePath)[m
[32m+[m[32m#     # print(dirs,'\n',filename)[m
[32m+[m[32m#[m
[32m+[m[32m#     # 2 修改转化后的文件名[m
[32m+[m[32m#     new_name = ''[m
[32m+[m[32m#     if fnmatch.fnmatch(filename,'*.doc'):[m
[32m+[m[32m#         new_name = filename[:-4]+'.txt'[m
[32m+[m[32m#     elif fnmatch.fnmatch(filename,'*.docx'):[m
[32m+[m[32m#         new_name = filename[:-5]+'.txt'[m
[32m+[m[32m#     else: return[m
[32m+[m[32m#     print('->',new_name)[m
[32m+[m[32m#[m
[32m+[m[32m#     # 3 文件转化后的保存路径[m
[32m+[m[32m#     if savePath=='': savePath = dirs[m
[32m+[m[32m#     else: savePath = savePath[m
[32m+[m[32m#     word_to_txt = os.path.join(savePath,new_name)[m
[32m+[m[32m#     print('->',word_to_txt)[m
[32m+[m[32m#[m
[32m+[m[32m#     # 4 加载处理应用,word转化txt[m
[32m+[m[32m#     wordapp = wc.Dispatch('Word.Application')[m
[32m+[m[32m#     mytxt = wordapp.Documents.Open(filePath)[m
[32m+[m[32m#     mytxt.SaveAs(word_to_txt,4)[m
[32m+[m[32m#     mytxt.Close()[m
[32m+[m[32m#[m
[32m+[m[32m#[m
[32m+[m[32m#[m
[32m+[m[32m# if __name__=='__main__':[m
[32m+[m[32m#     filepath = os.path.abspath(r'../dataSet/Corpus/wordtotxt/一种改进的朴素贝叶斯文本分类方法研究.doc')[m
[32m+[m[32m#     # savepath = ''[m
[32m+[m[32m#     Word2Txt(filepath)[m
\ No newline at end of file[m
